#!/usr/bin/env python3
"""
Test script for Heroku deployment with OAuth flow
Replace YOUR_HEROKU_URL with your actual Heroku URL
"""

import requests
import json

# ‚ö†Ô∏è  IMPORTANT: Replace this with your actual Heroku URL from the dashboard
# Go to Heroku ‚Üí Your app ‚Üí Settings ‚Üí Domains ‚Üí Copy the URL
HEROKU_URL = "https://google-drive-chatgpt-api-4f8a9bfe61b3.herokuapp.com"  # e.g., "https://your-app-name.herokuapp.com"

def test_heroku_api():
    """Test the deployed Heroku API with OAuth flow."""
    print(f"üöÄ Testing Heroku API at: {HEROKU_URL}")
    print("=" * 50)
    
    # Test 1: Root endpoint (should work without auth)
    print("\n1Ô∏è‚É£ Testing root endpoint...")
    try:
        response = requests.get(f"{HEROKU_URL}/")
        if response.status_code == 200:
            print("‚úÖ Root endpoint working!")
            print(f"   Response: {response.json()}")
        else:
            print(f"‚ùå Root endpoint failed: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Root endpoint error: {e}")
    
    # Test 2: Health check (should show unauthenticated)
    print("\n2Ô∏è‚É£ Testing health endpoint...")
    try:
        response = requests.get(f"{HEROKU_URL}/health")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Health check working!")
            print(f"   Status: {data.get('status')}")
            print(f"   Google Services: {data.get('google_services')}")
            if 'error' in data:
                print(f"   Error: {data.get('error')}")
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Health check error: {e}")
    
    # Test 3: OAuth start endpoint
    print("\n3Ô∏è‚É£ Testing OAuth start endpoint...")
    try:
        response = requests.get(f"{HEROKU_URL}/auth", allow_redirects=False)
        if response.status_code in [302, 303, 307, 308]:
            print("‚úÖ OAuth redirect working!")
            print(f"   Redirect to: {response.headers.get('Location', 'Unknown')}")
        else:
            print(f"‚ùå OAuth redirect failed: {response.status_code}")
            print(f"   Response: {response.text}")
    except Exception as e:
        print(f"‚ùå OAuth start error: {e}")
    
    # Test 4: Protected endpoints (should require auth)
    print("\n4Ô∏è‚É£ Testing protected endpoints (should require auth)...")
    try:
        doc_data = {"name": "Test Document from Heroku"}
        response = requests.post(
            f"{HEROKU_URL}/create_doc",
            json=doc_data,
            headers={"Content-Type": "application/json"}
        )
        if response.status_code == 401:
            print("‚úÖ Authentication required (correct behavior)!")
            print(f"   Response: {response.json()}")
        else:
            print(f"‚ùå Unexpected response: {response.status_code}")
            print(f"   Response: {response.text}")
    except Exception as e:
        print(f"‚ùå Protected endpoint test error: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ Heroku deployment test completed!")
    print("\nüìã Next Steps:")
    print("1. Visit: " + HEROKU_URL + "/auth")
    print("2. Complete Google OAuth authentication")
    print("3. Test document/sheet creation endpoints")

if __name__ == "__main__":
    # Check if URL is still placeholder
    if "YOUR_HEROKU_URL" in HEROKU_URL:
        print("‚ùå Please update HEROKU_URL with your actual Heroku URL!")
        print("   Go to Heroku dashboard ‚Üí Your app ‚Üí Settings ‚Üí Domains")
        print("   Copy the URL and replace 'YOUR_HEROKU_URL' in this script")
        print("   Example: HEROKU_URL = 'https://my-app.herokuapp.com'")
    else:
        test_heroku_api()
